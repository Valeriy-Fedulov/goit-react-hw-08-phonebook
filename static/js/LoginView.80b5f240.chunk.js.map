{"version":3,"sources":["../node_modules/@mui/icons-material/Login.js","views/LoginView.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","component","sx","m","width","display","position","right","top","height","marginLeft","zIndex","padding","textAlign","noValidate","autoComplete","onSubmit","e","preventDefault","authOperations","logIn","elevation","label","type","required","onChange","variant","endIcon"],"mappings":"gJAEA,IAAIA,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,kHACD,SAEJP,EAAQE,QAAUG,G,wICsEHG,UA7Ef,WACE,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMjB,EAAc,EAAdA,MACtC,OAAQiB,GACN,IAAK,QACH,OAAOL,EAASZ,GAClB,IAAK,WACH,OAAOc,EAAYd,GACrB,QACE,SAWN,OACE,cAAC,IAAD,CACEkB,UAAU,OACVC,GAAI,CACF,uBAAwB,CAAEC,EAAG,EAAGC,MAAO,QAEvCC,QAAS,OACTC,SAAU,WACVC,MAAO,IACPC,IAAK,IACLC,OAAQ,QACRL,MAAO,MACPM,WAAY,OACZC,OAAQ,KACR,kBAAmB,CACjBR,EAAG,EACHS,QAAS,aACTC,UAAW,WAGfC,YAAU,EACVC,aAAa,MACbC,SA7BiB,SAAAC,GACnBA,EAAEC,iBACF3B,EAAS4B,IAAeC,MAAM,CAAE1B,QAAOE,cACvCD,EAAS,IACTE,EAAY,KAIZ,SAuBE,eAAC,IAAD,CAAOwB,UAAW,EAAlB,UACE,yCACA,gCACE,cAAC,IAAD,CACEC,MAAM,QACNC,KAAK,QACLvB,KAAK,QACLjB,MAAOW,EACP8B,UAAQ,EACRC,SAAU3B,MAGd,gCACE,cAAC,IAAD,CACEwB,MAAM,WACNC,KAAK,WACLvB,KAAK,WACLjB,MAAOa,EACP4B,UAAQ,EACRC,SAAU3B,MAGd,cAAC,IAAD,CAAQ4B,QAAQ,YAAYC,QAAS,cAAC,IAAD,IAAeJ,KAAK,SAAzD","file":"static/js/LoginView.80b5f240.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 7 9.6 8.4l2.6 2.6H2v2h10.2l-2.6 2.6L11 17l5-5-5-5zm9 12h-8v2h8c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-8v2h8v14z\"\n}), 'Login');\n\nexports.default = _default;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nimport Button from '@mui/material/Button';\nimport LoginIcon from '@mui/icons-material/Login';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\n\nfunction LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '100%' },\n\n        display: 'flex',\n        position: 'absolute',\n        right: '0',\n        top: '0',\n        height: '100vh',\n        width: '30%',\n        marginLeft: 'auto',\n        zIndex: '-1',\n        '& > :not(style)': {\n          m: 1,\n          padding: '100px 30px',\n          textAlign: 'center',\n        },\n      }}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n    >\n      <Paper elevation={3}>\n        <h1>Sing in</h1>\n        <label>\n          <TextField\n            label=\"Email\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            required\n            onChange={handleChange}\n          ></TextField>\n        </label>\n        <label>\n          <TextField\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <Button variant=\"contained\" endIcon={<LoginIcon />} type=\"submit\">\n          Login\n        </Button>\n      </Paper>\n    </Box>\n  );\n}\n\nexport default LoginView;\n"],"sourceRoot":""}