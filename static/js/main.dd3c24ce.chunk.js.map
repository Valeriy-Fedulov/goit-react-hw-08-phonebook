{"version":3,"sources":["components/loader/Loader.js","components/navigation/Navigation.js","components/usermenu/avatar.jpeg","components/usermenu/UserMenu.js","components/authnav/AuthNav.js","components/appbar/AppBar.js","components/privateroute/PrivateRoute.js","components/publicroute/PublicRoute.js","App.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/auth/auth-actions.js","redux/contacts/contacts-actions.js","components/navigation/Navigation.module.css","components/authnav/AuthNav.module.css","redux/contacts/contacts-reducer.js"],"names":["Loading","className","type","color","height","width","timeout","active","isActive","s","activeLink","link","Navigation","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","Stack","spacing","direction","divider","Divider","orientation","flexItem","to","UserMenu","dispatch","useDispatch","name","getUserName","avatar","defaultAvatar","alignItems","src","alt","Button","variant","endIcon","onClick","authOperations","logOut","AuthNav","HeaderAppBar","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","mr","Typography","component","PrivateRoute","children","redirectTo","PublicRoute","HomeView","lazy","RegisterView","LoginView","ContactsView","App","isRefreshing","getIsRefreshing","useEffect","fetchCurrentUser","fallback","path","element","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","alert","Promise","reject","Error","logIn","console","log","_","thunkAPI","state","getState","persistedToken","rejectWithValue","get","user","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","payload","pending","rejected","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","setFilter","module","exports","items","createReducer","filter","id","error","combineReducers"],"mappings":"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","file":"static/js/main.dd3c24ce.chunk.js","sourcesContent":["import Loader from 'react-loader-spinner';\n\nexport const Loading = () => (\n  <Loader\n    className=\"Loader\"\n    type=\"Puff\"\n    color=\"#00BFFF\"\n    height={100}\n    width={100}\n    timeout={3000}\n  />\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\nimport s from './Navigation.module.css';\n\nimport Stack from '@mui/material/Stack';\nimport Divider from '@mui/material/Divider';\n\nconst active = ({ isActive }) => (isActive ? s.activeLink : s.link);\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <nav>\n      <Stack\n        spacing={2}\n        direction=\"row\"\n        divider={<Divider orientation=\"vertical\" color=\"white\" flexItem />}\n      >\n        <NavLink to=\"/\" className={active}>\n          Home\n        </NavLink>\n\n        {isLoggedIn && (\n          <NavLink to=\"/contacts\" className={active}>\n            Contacts\n          </NavLink>\n        )}\n      </Stack>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/avatar.e5117e8e.jpeg\";","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './avatar.jpeg';\n\nimport Button from '@mui/material/Button';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport Stack from '@mui/material/Stack';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n  const avatar = defaultAvatar;\n\n  return (\n    <Stack spacing={2} direction=\"row\" alignItems=\"center\">\n      <img src={avatar} alt=\"\" width=\"32\" height=\"32\" />\n      <span>{name}</span>\n      <Button\n        variant=\"contained\"\n        type=\"button\"\n        endIcon={<LogoutIcon />}\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Logout\n      </Button>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './AuthNav.module.css';\n\nimport Stack from '@mui/material/Stack';\nimport Divider from '@mui/material/Divider';\n\nconst active = ({ isActive }) => (isActive ? s.activeLink : s.link);\n\nexport default function AuthNav() {\n  return (\n    <Stack\n      spacing={2}\n      direction=\"row\"\n      divider={<Divider orientation=\"vertical\" color=\"white\" flexItem />}\n    >\n      <NavLink to=\"/register\" className={active}>\n        Sing up\n      </NavLink>\n      <NavLink to=\"/login\" className={active}>\n        Login\n      </NavLink>\n    </Stack>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from '../navigation';\nimport UserMenu from '../usermenu';\nimport AuthNav from '../authnav';\nimport { authSelectors } from '../../redux/auth';\n\nimport Box from '@mui/material/Box';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport CottageIcon from '@mui/icons-material/Cottage';\nimport Typography from '@mui/material/Typography';\n\nexport default function HeaderAppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <CottageIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            <Navigation />\n          </Typography>\n          {isLoggedIn ? <UserMenu /> : <AuthNav />}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\n\nexport default function PrivateRoute({ children, redirectTo = '/' }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return isLoggedIn ? children : <Navigate to={redirectTo} />;\n}\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\n\nexport default function PublicRoute({ children, redirectTo = '/' }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return isLoggedIn ? <Navigate to={redirectTo} /> : children;\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\nimport { Loading } from './components/loader';\nimport HeaderAppBar from './components/appbar';\nimport { authOperations, authSelectors } from './redux/auth';\nimport PrivateRoute from './components/privateroute/PrivateRoute';\nimport PublicRoute from './components/publicroute/PublicRoute';\n\nimport './App.css';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /* webpackChunkName: \"HomeView\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"RegisterView\" */),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"LoginView\" */),\n);\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"ContactsView\" */),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isRefreshing = useSelector(authSelectors.getIsRefreshing);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isRefreshing && (\n      <>\n        <HeaderAppBar />\n        <Suspense fallback={<Loading />}>\n          <Routes>\n            <Route path=\"/\" element={<HomeView />} />\n            <Route\n              path=\"/register\"\n              element={\n                <PublicRoute>\n                  <RegisterView />\n                </PublicRoute>\n              }\n            />\n            <Route\n              path=\"/login\"\n              element={\n                <PublicRoute>\n                  <LoginView />\n                </PublicRoute>\n              }\n            />\n            <Route\n              path=\"/contacts\"\n              element={\n                <PrivateRoute redirectTo=\"/login\">\n                  <ContactsView />\n                </PrivateRoute>\n              }\n            />\n            <Route path=\"*\" element={<Navigate to=\"/\" />} />\n          </Routes>\n        </Suspense>\n      </>\n    )\n  );\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    if (!data) return;\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    alert('This user already exists!');\n\n    return Promise.reject(new Error(error));\n  }\n});\n\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    alert('Incorrect login or password!');\n\n    return Promise.reject(new Error(error));\n  }\n});\n\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) return thunkAPI.rejectWithValue();\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n);\n\nconst authOperations = {\n  register,\n  logIn,\n  logOut,\n  fetchCurrentUser,\n};\n\nexport default authOperations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUserName = state => state.auth.user.name;\n\nconst getIsRefreshing = state => state.auth.isRefreshing;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n  getIsRefreshing,\n};\n\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isRefreshing = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isRefreshing = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isRefreshing = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const setFilter = createAction('contact/setFilter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1LLZS\",\"activeLink\":\"Navigation_activeLink__2IYFt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__1z1Av\",\"activeLink\":\"AuthNav_activeLink__1a1pM\"};","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  setFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [setFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n"],"sourceRoot":""}